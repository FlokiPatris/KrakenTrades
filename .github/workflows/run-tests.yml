# 🧪 Python Tests & Coverage (DRY, Makefile-driven)
# - Single source of truth: Makefile handles test execution & coverage
# - CI responsibilities only: artifacts, environment prep, report upload
# - No magic constants: Python version, paths, and cache centralized in env
# - Public repo safe: no secrets echoed, minimal permissions

name: "🧪 Python Tests & Coverage"

on:
  pull_request:
    branches: ["**"]
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read  # ❌ Write not needed for tests

env:
  PYTHON_VERSION: "3.11"  # Central Python version for CI
  PIP_CACHE_DIR: ~/.cache/pip  # Reuse pip cache across runs
  UPLOADS_DIR: uploads  # Writable folder for test artifacts

jobs:
  test:
    name: Run pytest + coverage
    runs-on: ubuntu-latest
    timeout-minutes: 30
    defaults:
      run:
        shell: bash

    steps:
      # ------------------------------------------------------
      # Checkout repository (CI-only responsibility)
      # ------------------------------------------------------
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      # ------------------------------------------------------
      # Setup Python and pip caching
      # ------------------------------------------------------
      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip

      # ------------------------------------------------------
      # Install Python dependencies using Makefile
      # ------------------------------------------------------
      - name: 📦 Install Python dependencies
        run: make install-deps

      # ------------------------------------------------------
      # Prepare uploads folder for CI artifacts
      # ------------------------------------------------------
      - name: 📂 Prepare uploads directory
        run: mkdir -p ${{ github.workspace }}/uploads

      # ------------------------------------------------------
      # Download trades.pdf (secrets safe)
      # ------------------------------------------------------
      - name: 📄 Download trades.pdf
        env:
          GOOGLE_DRIVE_JSON_KEY: ${{ secrets.GOOGLE_DRIVE_JSON_KEY }}
        run: python scripts/get_trades_pdf.py

      # ------------------------------------------------------
      # Run tests with coverage (Makefile handles cleanup)
      # ------------------------------------------------------
      - name: 🧪 Run tests + coverage
        run: make test

      # ------------------------------------------------------
      # Upload XML coverage report for CI integration
      # ------------------------------------------------------
      - name: 📄 Upload XML coverage (CI tools)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
          if-no-files-found: ignore
